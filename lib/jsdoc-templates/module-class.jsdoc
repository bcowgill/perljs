/*jshint unused: false */
/**
	@file
	A jsdoc sample use of javascript class modules.
	Demonstrates module based classes and creating jsdoc links
	to specific members of the class.
	All symbols in the file are assumed to be members of the
	module unless documented otherwise.
	@see jsdoc on modules {@link http://usejsdoc.org/tags-module.html}
	@see contains {@link module:JSDocModuleClass}
	@see contains class {@link module:JSDocModuleClass.JSDocClass}
*/

"use strict";

// This just to satisfy jshint validthis scoping
(function () {
	/*jshint validthis: true */

/**
	Demonstration of simple jsdoc module class definition.
	If the name of the module is omitted, it is derived from
	the filename.
	See jsdoc for more information {@link http://usejsdoc.org/tags-module.html}
	@module JSDocModuleClass
*/

/**
	A class within a module must be in its own comment block
	apart from the module comment.
	It documents the constructor method.
	@see contained in {@link module:JSDocModuleClass}
	@see self reference {@link module:JSDocModuleClass.JSDocClass}
	@class
	@param {string} title The title of the new object.
*/
this.JSDocClass = function (title) {
	/** Simple data member documentation without data type is
	easy in the constructor. */
	this.counter = 0;

	/** The title. Full documentation of data members.
		{@link module:JSDocModuleClass.JSDocClass#title}
		The hash indicates an instance data member.
		@type string
	*/
	this.title = title;

	/** An instance method. {@link module:JSDocModuleClass.JSDocClass#method}()
		The hash indicates an instance method.
		@param {number} value - invoke the method with the value.
		@return {string} value converted to string.
	*/
	this.method = function (value) {};
	return this;
};

})();
